/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package car_rental_system;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;

/**
 *
 * @author jingt
 */

public class Admin_CarInfo extends javax.swing.JFrame {

    static Car car;
    /**
     * Creates new form Admin_CarInfo
     */
    public Admin_CarInfo() {
        initComponents();
        this.setLocationRelativeTo(null);//Display windows at the centre of screen
    }

    public Admin_CarInfo(String Name) {
        initComponents();
        lAdminName.setText(Name);
        this.setLocationRelativeTo(null);//Display windows at the centre of screen
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        UserIDlabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lAdminName = new javax.swing.JLabel();
        NameValidation = new javax.swing.JLabel();
        bAddCarInfo = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        tfCarID = new javax.swing.JTextField();
        tfBrand = new javax.swing.JTextField();
        tfModel = new javax.swing.JTextField();
        tfYear = new javax.swing.JTextField();
        tfColour = new javax.swing.JTextField();
        tfPlateNumber = new javax.swing.JTextField();
        BrandValidation = new javax.swing.JLabel();
        tfPsgCap = new javax.swing.JTextField();
        CarPlateNoValidation = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        tfPrice = new javax.swing.JTextField();
        PriceValidation = new javax.swing.JLabel();
        CapacityValidation = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        ModelValidation = new javax.swing.JLabel();
        tfTransmission = new javax.swing.JTextField();
        YearValidation = new javax.swing.JLabel();
        ColourValidation = new javax.swing.JLabel();
        bClear = new javax.swing.JButton();
        TransmissionValidation = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        TypeValidation = new javax.swing.JLabel();
        tfBodyType = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lName = new javax.swing.JLabel();
        bShowAllRec = new javax.swing.JButton();
        bShowByAvailability = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        ReturnCar = new javax.swing.JButton();
        bModifyCarInfo = new javax.swing.JButton();
        bDeleteCarInfo = new javax.swing.JButton();
        bBacktoMenu = new javax.swing.JButton();
        tfAvailability = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1128, 680));

        jPanel3.setBackground(new java.awt.Color(235, 232, 252));
        jPanel3.setPreferredSize(new java.awt.Dimension(1128, 600));

        jLabel6.setFont(new java.awt.Font("Gabriola", 1, 48)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Car Info");

        UserIDlabel2.setText(" ");

        jLabel8.setText("Hi, Admin");

        lAdminName.setText(" ");

        NameValidation.setForeground(new java.awt.Color(255, 0, 0));
        NameValidation.setText(" ");

        bAddCarInfo.setText("Add");
        bAddCarInfo.setFocusPainted(false);
        bAddCarInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddCarInfoActionPerformed(evt);
            }
        });

        jLabel9.setText("Passenger Capacity");

        tfCarID.setEnabled(false);

        BrandValidation.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        BrandValidation.setForeground(new java.awt.Color(255, 51, 51));
        BrandValidation.setText(" ");
        BrandValidation.setName("BrandValidation"); // NOI18N

        CarPlateNoValidation.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        CarPlateNoValidation.setForeground(new java.awt.Color(255, 51, 51));
        CarPlateNoValidation.setText(" ");
        CarPlateNoValidation.setName("BrandValidation"); // NOI18N

        jLabel10.setText("Price ");

        PriceValidation.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        PriceValidation.setForeground(new java.awt.Color(255, 51, 51));
        PriceValidation.setText(" ");
        PriceValidation.setName("PriceValidation"); // NOI18N

        CapacityValidation.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        CapacityValidation.setForeground(new java.awt.Color(255, 51, 51));
        CapacityValidation.setText(" ");
        CapacityValidation.setName("PriceValidation"); // NOI18N

        jLabel19.setText("Transmission Type");

        ModelValidation.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        ModelValidation.setForeground(new java.awt.Color(255, 51, 51));
        ModelValidation.setText(" ");
        ModelValidation.setName("BrandValidation"); // NOI18N

        YearValidation.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        YearValidation.setForeground(new java.awt.Color(255, 51, 51));
        YearValidation.setText(" ");
        YearValidation.setName("BrandValidation"); // NOI18N

        ColourValidation.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        ColourValidation.setForeground(new java.awt.Color(255, 51, 51));
        ColourValidation.setText(" ");
        ColourValidation.setName("BrandValidation"); // NOI18N

        bClear.setText("Clear");
        bClear.setFocusPainted(false);
        bClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bClearActionPerformed(evt);
            }
        });

        TransmissionValidation.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        TransmissionValidation.setForeground(new java.awt.Color(255, 51, 51));
        TransmissionValidation.setText(" ");
        TransmissionValidation.setName("BrandValidation"); // NOI18N

        jLabel11.setText("Body Type");

        TypeValidation.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        TypeValidation.setForeground(new java.awt.Color(255, 51, 51));
        TypeValidation.setText(" ");
        TypeValidation.setName("BrandValidation"); // NOI18N

        jLabel2.setText("Car ID");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Car ID", "Car Plate Number", "Year", "Passenger Capacity", "Model", "Colour", "Type", "Transmission", "Brand", "Price", "Availability"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel3.setText("Brand");

        jLabel4.setText("Model");

        jLabel5.setText("Year");

        jLabel7.setText("Colour");

        jLabel12.setText("Plate Number");

        bShowAllRec.setText("Show All Records");
        bShowAllRec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bShowAllRecActionPerformed(evt);
            }
        });

        bShowByAvailability.setText("Show By Availability");
        bShowByAvailability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bShowByAvailabilityActionPerformed(evt);
            }
        });

        jLabel13.setText("Availability (Yes/No):");

        ReturnCar.setText("Return Car");
        ReturnCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnCarActionPerformed(evt);
            }
        });

        bModifyCarInfo.setText("Update");
        bModifyCarInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bModifyCarInfoActionPerformed(evt);
            }
        });

        bDeleteCarInfo.setText("Delete");
        bDeleteCarInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteCarInfoActionPerformed(evt);
            }
        });

        bBacktoMenu.setText("Back to Menu");
        bBacktoMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBacktoMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(462, 462, 462)
                        .addComponent(NameValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 313, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                        .addGap(644, 644, 644)
                        .addComponent(UserIDlabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lAdminName, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(bShowAllRec)
                        .addGap(18, 18, 18)
                        .addComponent(bShowByAvailability)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ReturnCar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bModifyCarInfo)
                        .addGap(18, 18, 18)
                        .addComponent(bDeleteCarInfo)
                        .addGap(18, 18, 18)
                        .addComponent(bBacktoMenu))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bAddCarInfo)
                        .addGap(18, 18, 18)
                        .addComponent(bClear)))
                .addGap(56, 56, 56))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addGap(55, 55, 55)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1017, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(42, 42, 42)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(tfBrand, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                        .addComponent(tfCarID, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addGap(18, 18, 18)
                                    .addComponent(BrandValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(tfModel, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(ModelValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfYear, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tfColour, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(38, 38, 38)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ColourValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(YearValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel12)
                                .addComponent(jLabel9)
                                .addComponent(jLabel10)
                                .addComponent(jLabel19)
                                .addComponent(jLabel11))
                            .addGap(42, 42, 42)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(tfPlateNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(CarPlateNoValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(tfPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(PriceValidation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(tfPsgCap, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(CapacityValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfTransmission, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tfBodyType, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(TypeValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(TransmissionValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGap(56, 56, 56)))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(509, 509, 509)
                    .addComponent(lName, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(510, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(UserIDlabel2))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(lAdminName)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(NameValidation)
                .addGap(134, 134, 134)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bClear)
                    .addComponent(bAddCarInfo))
                .addGap(317, 317, 317)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bBacktoMenu)
                    .addComponent(bDeleteCarInfo)
                    .addComponent(bModifyCarInfo)
                    .addComponent(bShowByAvailability)
                    .addComponent(bShowAllRec)
                    .addComponent(jLabel13)
                    .addComponent(ReturnCar)
                    .addComponent(tfAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(62, 62, 62)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel12)
                                .addComponent(tfPlateNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(CarPlateNoValidation))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel9)
                                .addComponent(tfPsgCap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(CapacityValidation))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10)
                                .addComponent(tfPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(PriceValidation))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tfTransmission, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel19)
                                .addComponent(TransmissionValidation))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel11)
                                .addComponent(tfBodyType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(TypeValidation)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(tfCarID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(21, 21, 21)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(tfBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(BrandValidation))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(tfModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ModelValidation))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(tfYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(YearValidation))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(tfColour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ColourValidation))))
                    .addGap(59, 59, 59)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(75, Short.MAX_VALUE)))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(303, 303, 303)
                    .addComponent(lName, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(326, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 645, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bAddCarInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddCarInfoActionPerformed
        try {
            Car cars = new Car();
            String filePath = "Car Info.txt";
            File f = new File(filePath);
            String plateNum = this.tfPlateNumber.getText(),
            year = this.tfYear.getText(),
            passengerCapacity = this.tfPsgCap.getText(),
            model = this.tfModel.getText(),
            colour = this.tfColour.getText(),
            bodyType = this.tfBodyType.getText(),
            transmissionType = this.tfTransmission.getText(),
            price = this.tfPrice.getText(),
            brand = this.tfBrand.getText();

            if (!plateNum.isEmpty()) {
                if (Car.isCarPlateValid(plateNum)) {
                    if (Car.isCarPlateExist(plateNum)) {
                        CarPlateNoValidation.setText("");
                    } else {
                        plateNum = null;
                        CarPlateNoValidation.setText("Car Plate Number exists!");
                    }

                } else {
                    plateNum = null;
                    CarPlateNoValidation.setText("Invalid Car Plate Number");
                }
            } else {
                plateNum = null;
                CarPlateNoValidation.setText("Enter the Car Plate Number!");
            }

            if (year.isEmpty()) {
                year = null;
                YearValidation.setText("Enter the Year!!");
            } else {
                if (Integer.parseInt(year) > 1900) {
                    YearValidation.setText("");
                } else {
                    year = null;
                    YearValidation.setText("Do not enter 0 or negative value!");
                }
            }

            if (!passengerCapacity.isEmpty()) {
                if (Integer.parseInt(passengerCapacity) > 0) {
                    CapacityValidation.setText("");
                } else {
                    passengerCapacity = null;
                    CapacityValidation.setText("Do not enter 0 or negative value!");
                }
            } else {
                passengerCapacity = null;
                CapacityValidation.setText("Enter Value!");
            }

            if (model.isEmpty()) {
                model = null;
                ModelValidation.setText("Enter the Model!!");
            } else {
                ModelValidation.setText("");
            }

            if (colour.isEmpty()) {
                colour = null;
                ColourValidation.setText("Enter the Model!!");
            } else {
                ColourValidation.setText("");
            }

            if (bodyType.isEmpty()) {
                bodyType = null;
                TypeValidation.setText("Enter the Model!!");
            } else {
                TypeValidation.setText("");
            }

            if (transmissionType.isEmpty()) {
                transmissionType = null;
                TransmissionValidation.setText("Enter the Model!!");
            } else {
                TransmissionValidation.setText("");
            }

            if (!price.isEmpty()) {
                if (Float.parseFloat(price) > 0) {
                    PriceValidation.setText("");
                } else {
                    price = null;
                    PriceValidation.setText("Do not enter 0 or negative value!");
                }
            } else {
                price = null;
                PriceValidation.setText("Enter Value!");
            }

            if (brand.isEmpty()) {
                brand = null;
                BrandValidation.setText("Enter the Brand!!");
            } else {
                BrandValidation.setText("");
            }

            if (plateNum != null && year != null && passengerCapacity != null && model != null && colour != null && bodyType != null && transmissionType != null && price != null && brand != null) {
                car = new Car(0, cars.getCarID(), plateNum, Integer.parseInt(year), Integer.parseInt(passengerCapacity), model, colour, bodyType, transmissionType, brand, Float.parseFloat(price), cars.getAvailability());
                car.Add();
                tfCarID.setText(car.getCarID());
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Admin_CarInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bAddCarInfoActionPerformed

    private void bClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bClearActionPerformed
        tfCarID.setText("");
        tfBrand.setText("");
        tfModel.setText("");
        tfYear.setText("");
        tfColour.setText("");
        tfPlateNumber.setText("");
        tfPsgCap.setText("");
        tfPrice.setText("");
        tfTransmission.setText("");
        tfBodyType.setText("");
        CarPlateNoValidation.setText("");
        BrandValidation.setText("");
        ModelValidation.setText("");
        YearValidation.setText("");
        ColourValidation.setText("");
        CapacityValidation.setText("");
        PriceValidation.setText("");
        TransmissionValidation.setText("");
        TypeValidation.setText("");
    }//GEN-LAST:event_bClearActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int i = jTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        tfCarID.setText(model.getValueAt(i, 0).toString());
        tfPlateNumber.setText(model.getValueAt(i, 1).toString());
        tfYear.setText(model.getValueAt(i, 2).toString());
        tfPsgCap.setText(model.getValueAt(i, 3).toString());
        tfModel.setText(model.getValueAt(i, 4).toString());
        tfColour.setText(model.getValueAt(i, 5).toString());
        tfBodyType.setText(model.getValueAt(i, 6).toString());
        tfTransmission.setText(model.getValueAt(i, 7).toString());
        tfBrand.setText(model.getValueAt(i, 8).toString());
        tfPrice.setText(model.getValueAt(i, 9).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void bShowAllRecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bShowAllRecActionPerformed
        String filePath = "Car Info.txt";
        File f = new File(filePath);
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        try {
            FileReader fr = new FileReader(f);
            BufferedReader br = new BufferedReader(fr);
            String line;
            while ((line = br.readLine()) != null) {
                String[] recLine = line.split(";");
                String CarID = recLine[1];
                String plateNum = recLine[2];
                String Year = recLine[3];
                String PassengerCapacity = recLine[4];
                String Model = recLine[5];
                String Colour = recLine[6];
                String Type = recLine[7];
                String Transmission = recLine[8];
                String Brand = recLine[9];
                String Price = recLine[10];
                String Availabilty = recLine[11];

                Object[] row = {CarID, plateNum, Year, PassengerCapacity, Model,
                    Colour, Type, Transmission, Brand, Price, Availabilty};
                model.addRow(row);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Admin_CarInfo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Admin_CarInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bShowAllRecActionPerformed

    private void bShowByAvailabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bShowByAvailabilityActionPerformed
        String filePath = "Car Info.txt";
        File f = new File(filePath);
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        try {
            FileReader fr = new FileReader(f);
            BufferedReader br = new BufferedReader(fr);
            String line;
            while ((line = br.readLine()) != null) {
                String[] recLine = line.split(";");
                if (tfAvailability.getText().contentEquals(recLine[11])) {
                    String CarID = recLine[1];
                    String plateNum = recLine[2];
                    String Year = recLine[3];
                    String PassengerCapacity = recLine[4];
                    String Model = recLine[5];
                    String Colour = recLine[6];
                    String Type = recLine[7];
                    String Transmission = recLine[8];
                    String Brand = recLine[9];
                    String Price = recLine[10];
                    String Availabilty = recLine[11];

                    Object[] row = {CarID, plateNum, Year, PassengerCapacity, Model,
                        Colour, Type, Transmission, Brand, Price, Availabilty};
                    model.addRow(row);
                }
            }
        } catch (IOException x) {
            System.out.println(x);
        }
    }//GEN-LAST:event_bShowByAvailabilityActionPerformed

    private void ReturnCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnCarActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int row = jTable1.getSelectedRow();
        String CarID = model.getValueAt(row, 0).toString();
        File file = new File("Car Info.txt");
        File bookings = new File("Bookings.txt");
        BufferedReader br, br2;
        try {
            br = new BufferedReader(new FileReader(file));
            br2 = new BufferedReader(new FileReader(bookings));
            String[] rec, rec2;
            String AvailableOld, AvailableNew, StatusOld, StatusNew;
            Object[] allRec = br.lines().toArray();
            Object[] allRec2 = br2.lines().toArray();

            for (int i = 0; i < allRec.length; i++) {
                rec = allRec[i].toString().trim().split(";");
                if (CarID.equals(rec[1])) {
                    AvailableOld = rec[11];
                    AvailableNew = "Yes";
                    rec[11] = AvailableNew;
                    String newrec = "";
                    for (int j = 0; j < rec.length; j++) {
                        newrec = newrec + rec[j] + ";";
                    }
                    allRec[i] = newrec;
                }
            }
            BufferedWriter bw = new BufferedWriter(new FileWriter(file));
            for (int i = 0; i < allRec.length; i++) {
                bw.write(allRec[i] + "\n");
            }

            for (int i = 0; i < allRec2.length; i++) {
                rec2 = allRec2[i].toString().trim().split(";");
                if (CarID.equals(rec2[4])) {
                    StatusOld = rec2[10];
                    StatusNew = "Completed";
                    rec2[10] = StatusNew;
                    String newrec2 = "";
                    for (int j = 0; j < rec2.length; j++) {
                        newrec2 = newrec2 + rec2[j] + ";";
                    }
                    allRec2[i] = newrec2;
                }
            }
            BufferedWriter bw2 = new BufferedWriter(new FileWriter(bookings));
            for (int i = 0; i < allRec2.length; i++) {
                bw2.write(allRec2[i] + "\n");
            }

            JOptionPane.showMessageDialog(null, "Car Returned Succesfully!");
            bw2.close();
            br2.close();
            bw.close();
            br.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Admin_CarInfo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Admin_CarInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ReturnCarActionPerformed

    private void bModifyCarInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bModifyCarInfoActionPerformed
        try {
            Car cars = new Car();
            String CarID = this.tfCarID.getText(),
            plateNum = this.tfPlateNumber.getText(),
            year = this.tfYear.getText(),
            passengerCapacity = this.tfPsgCap.getText(),
            model = this.tfModel.getText(),
            colour = this.tfColour.getText(),
            bodyType = this.tfBodyType.getText(),
            transmissionType = this.tfTransmission.getText(),
            price = this.tfPrice.getText(),
            brand = this.tfBrand.getText();
            cars.setCarID(CarID);
            File carfile = new File("Car Info.txt");
            BufferedReader bradmfile = new BufferedReader(new FileReader(carfile));
            String linerec;
            while ((linerec = bradmfile.readLine()) != null) {
                String[] recLine = linerec.split(";");
                if (CarID.equals(recLine[1])) {
                    cars.setID(Integer.parseInt(recLine[0]));
                    cars.setCarPlateNum(recLine[2]);
                }
            }

            if (!plateNum.isEmpty()) {
                if (Car.isCarPlateValid(plateNum)) {
                    if (plateNum.equals(cars.getCarPlateNum())) {
                        CarPlateNoValidation.setText("");
                    } else {
                        plateNum = null;
                        CarPlateNoValidation.setText("Car Plate Number exists!");
                    }
                } else {
                    plateNum = null;
                    CarPlateNoValidation.setText("Invalid Car Plate Number");
                }
            } else {
                plateNum = null;
                CarPlateNoValidation.setText("Enter the Car Plate Number!");
            }

            if (year.isEmpty()) {
                year = null;
                YearValidation.setText("Enter the Year!!");
            } else {
                if (Integer.parseInt(year) > 1900) {
                    YearValidation.setText("");
                } else {
                    year = null;
                    YearValidation.setText("Do not enter 0 or negative value!");
                }
            }

            if (!passengerCapacity.isEmpty()) {
                if (Integer.parseInt(passengerCapacity) > 0) {
                    CapacityValidation.setText("");
                } else {
                    passengerCapacity = null;
                    CapacityValidation.setText("Do not enter 0 or negative value!");
                }
            } else {
                passengerCapacity = null;
                CapacityValidation.setText("Enter Value!");
            }

            if (model.isEmpty()) {
                model = null;
                ModelValidation.setText("Enter the Model!!");
            } else {
                ModelValidation.setText("");
            }

            if (colour.isEmpty()) {
                colour = null;
                ColourValidation.setText("Enter the Model!!");
            } else {
                ColourValidation.setText("");
            }

            if (bodyType.isEmpty()) {
                bodyType = null;
                TypeValidation.setText("Enter the Model!!");
            } else {
                TypeValidation.setText("");
            }

            if (transmissionType.isEmpty()) {
                transmissionType = null;
                TransmissionValidation.setText("Enter the Model!!");
            } else {
                TransmissionValidation.setText("");
            }

            if (!price.isEmpty()) {
                if (Float.parseFloat(price) > 0) {
                    PriceValidation.setText("");
                } else {
                    price = null;
                    PriceValidation.setText("Do not enter 0 or negative value!");
                }
            } else {
                price = null;
                PriceValidation.setText("Enter Value!");
            }

            if (brand.isEmpty()) {
                brand = null;
                BrandValidation.setText("Enter the Brand!!");
            } else {
                BrandValidation.setText("");
            }

            if (plateNum != null && year != null && passengerCapacity != null && model != null && colour != null && bodyType != null && transmissionType != null && price != null && brand != null) {
                car = new Car(0, cars.getCarID(), plateNum, Integer.parseInt(year), Integer.parseInt(passengerCapacity), model, colour, bodyType, transmissionType, brand, Float.parseFloat(price), cars.getAvailability());
                System.out.println(car.toString());
                car.Update();
                JOptionPane.showMessageDialog(null, "Update Successfully");
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Admin_CarInfo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Admin_CarInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bModifyCarInfoActionPerformed

    private void bDeleteCarInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteCarInfoActionPerformed
        Car carInfo = new Car();
        String CarID = tfCarID.getText().trim();

        int showConfirmDialog = JOptionPane.showConfirmDialog(null, "All Booked Car with " + CarID + " will also be deleted"
            + "\nAre you sure to continue?", "Delete Confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (showConfirmDialog == JOptionPane.YES_OPTION) {
            try {
                ArrayList<Booking> booking = Booking.View();
                for (int i = 0; i < booking.size(); i++) {
                    if (CarID.equals(booking.get(i).getCarID())) {
                        booking.get(i).Delete();
                    }
                }
                car = new Car(carInfo.getID(), CarID, carInfo.getCarPlateNum(), carInfo.getYear(), carInfo.getPassenger_Capacity(), carInfo.getModel(), carInfo.getColour(), carInfo.getType(), carInfo.getTransmission(), carInfo.getBrand(), carInfo.getPrice(), carInfo.getAvailability());
                car.Delete();
                JOptionPane.showMessageDialog(null, "Car Deleted Successful");
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Admin_CarInfo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_bDeleteCarInfoActionPerformed

    private void bBacktoMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBacktoMenuActionPerformed
        String Name = lName.getText();
        this.dispose();
        new AdminMenu(Name).setVisible(true);
    }//GEN-LAST:event_bBacktoMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin_CarInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin_CarInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin_CarInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin_CarInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin_CarInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BrandValidation;
    private javax.swing.JLabel CapacityValidation;
    private javax.swing.JLabel CarPlateNoValidation;
    private javax.swing.JLabel ColourValidation;
    private javax.swing.JLabel ModelValidation;
    private javax.swing.JLabel NameValidation;
    private javax.swing.JLabel PriceValidation;
    private javax.swing.JButton ReturnCar;
    private javax.swing.JLabel TransmissionValidation;
    private javax.swing.JLabel TypeValidation;
    private javax.swing.JLabel UserIDlabel2;
    private javax.swing.JLabel YearValidation;
    private javax.swing.JButton bAddCarInfo;
    private javax.swing.JButton bBacktoMenu;
    private javax.swing.JButton bClear;
    private javax.swing.JButton bDeleteCarInfo;
    private javax.swing.JButton bModifyCarInfo;
    private javax.swing.JButton bShowAllRec;
    private javax.swing.JButton bShowByAvailability;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lAdminName;
    private javax.swing.JLabel lName;
    private javax.swing.JTextField tfAvailability;
    private javax.swing.JTextField tfBodyType;
    private javax.swing.JTextField tfBrand;
    private javax.swing.JTextField tfCarID;
    private javax.swing.JTextField tfColour;
    private javax.swing.JTextField tfModel;
    private javax.swing.JTextField tfPlateNumber;
    private javax.swing.JTextField tfPrice;
    private javax.swing.JTextField tfPsgCap;
    private javax.swing.JTextField tfTransmission;
    private javax.swing.JTextField tfYear;
    // End of variables declaration//GEN-END:variables
}
